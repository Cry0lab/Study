Exam Objectives

Manage OpenShift Container Platform
    Objectives
        Use the web console to manage and configure an OpenShift cluster
        Use the command-line interface to manage and configure an OpenShift cluster
        Query, format, and filter attributes of Kubernetes resources
        Import, export, and configure Kubernetes resources
        Locate and examine container images
        Create and delete projects
        Examine resources and cluster status
        View logs
        Monitor cluster events and alerts
        Assess the health of an OpenShift cluster
        Troubleshoot common container, pod, and cluster events and alerts
        Use product documentation
Deploy Applications
    Objectives
        Deploy applications from resource manifests
        Use Kustomize overlays to modify application configurations
        Deploy applications from images, OpenShift templates, and Helm charts
        Deploy jobs to perform one-time tasks
        Manage application deployments
        Work with replica sets
        Work with labels and selectors
        Configure services
        Expose both HTTP and non-HTTP applications to external access
        Work with operators such as MetalLB and Multus
Manage Storage for Application Configuration and Data
    Objectives
        Create and use secrets
        Create and use configuration maps
        Provision Persistent Storage volumes for block and file-based data
        Use storage classes
        Manage non-shared storage with StatefulSets
Configure Applications for Reliability
    Objectives
        Configure and use health probes
        Reserve and limit application compute capacity
        Scale applications to meet increased demand
Manage Application Updates
    Objectives
        Identify images using tags and digests
        Roll back failed deployments
        Manage image streams
        Use triggers to manage images
Manage Authentication and Authorization
    Objectives
        Configure the HTPasswd identity provider for authentication
        Create and delete users
        Modify user passwords
        Create and manage groups
        Modify user and group permissions
Configure Network Security
    Objectives
        Configure networking components
        Troubleshoot software defined networking
        Create and edit external routes
        Control cluster network ingress
        Secure external and internal traffic using TLS certificates
        Configure application network policies
Enable Developer Self-Service
    Objectives
        Configure cluster resource quotas
        Configure project quotas
        Configure project resource requirements
        Configure project limit ranges
        Configure project templates
Manage OpenShift Operators
    Objectives
        Install an operator
        Delete an operator
Configure Application Security
    Objectives
        Configure and manage service accounts
        Run privileged applications
        Create service accounts
        Manage and apply permissions using security context constraints
        Create and apply secrets to manage sensitive information
        Configure application access to Kubernetes APIs
        Configure Kubernetes CronJobs
Update OpenShift
    Objectives
        Update an OpenShift cluster
        Identify deprecated Kubernetes API usage
        Update OpenShift Operators


Linux Academy

Installation
    

Manage OpenShift Conatiner Platform
    Show the CLI help
        oc help
    Create and Delete projects
        What is a project?
            Allows a group or community of users to manage their content away from others. Can have 
            pretty much any resource: Pods, DBs, secrets, service accounts, etc
        Create 2 projects with description and display name
            oc new-project <project-name> --description="<description>" --display-name="<dispay_name>"
        View all projects  
            oc get projects
        View your current project
            oc project
        Move into a specific project
            oc project <project_name>
        Create a simple app with the example given at creation
            oc new-app <stuff>
        List all the pods for this project
            oc get pods
        List all resources in one project
            oc get all
        Delete the project
            oc delete project <project_name>
        Create and Delete in GUI
            Bruh
    Import,Export, and Configure K8s resources
        Export resources to a yaml file
            oc get -o yaml <resource> > <resource>.yaml
        Export resources to a json file
            oc get -o json <resource> > <resource>.json
        Replace that resource with the file you made
            oc replace -f pod.yaml
        Extract a secret from the app
            oc get secrets
            oc extract secret/<secret-name>
        *Create a resource from a yaml file in a new project
            oc create -f <resource>.yaml
    Examine Resources and Cluster status
        List the nodes and there current resource consumption
            oc adm top node
        Do the same for a specific node
            oc adm top node <node name>
        List the pods and their current resource consumption
            oc adm top pod
    View logs
        Tail the logs of the most recent build config
            oc get buildconfig
            oc logs -f bc/<buildconfig_name>
        Do the same for deployments
            oc logs -f dc/<deploymentconfig_name>
        Tail logs of the first deployment
            oc logs --version=1 dc\<deploymentconfig_name>
        Tail logs of a pod
            oc logs -f pod/<pod_name>
        View the last 5 log entries for a pod
            oc logs -f pod/<pod_name> --tail=5
    Monitor Cluster Events and alerts
        View events in a project
            oc get events -n <project_name>
        
        

Manage Users and policies

Contral Access to resources

Configure Networking components

Configure Pod Scheduling

Configure Cluster Scaling